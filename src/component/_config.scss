////
/// @group configuration
/// @author Thomas ZILLIOX

/// Defines the component properties.
///
/// @type Map

$Herow-component-map: () !default;

/// Defines the default component name.
///
/// @type String

$Herow-default-component-name: layout !default;

/// Add a component
///
/// @param {String} $component-name (layout) - The name of the component
/// @param {Integer} $column-count (12) - The default number of columns of the component
/// @param {Length} $gutter-width (1em) - The size of the grid gutter
/// @param {Boolean} $external-gutter (false) - Set if an external padding is displayed on the grid
/// @param {Map} $column-count-map (()) - The number of columns of the component at different breakpoints

@function Herow-add-component(
    $component-name: $Herow-default-component-name,
    $column-count: $Herow-default-column-count,
    $gutter-width: $Herow-default-gutter-width,
    $external-gutter: $Herow-default-external-gutter,
    $column-count-map: ()
) {
    $default-column-count: $column-count;
    $column-count: ();
    $column-count: map_merge($column-count, (0: $default-column-count));
    @each $component-state, $size in $column-count-map {
        $breakpoint: $component-state;
        @if (type_of($component-state) == 'string') {
            $breakpoint: Herow-get-breakpoint-length-by-component-state($component-state);
        }
        $column-count: map_merge($column-count, ($breakpoint: $size));
    }
    $new-component: ($component-name: (
        gutter-width: $gutter-width,
        external-gutter: $external-gutter,
        column-count: $column-count
    ));
    @return map-merge($Herow-component-map, $new-component);
}
