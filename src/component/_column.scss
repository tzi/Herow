////
/// @group api
/// @author Thomas ZILLIOX

/// Include the styles of a component column
///
/// @param {Integer} $column-span (1) - The span length of the column
/// @param {String} $component-name (layout) - The name of the component
/// @param {List<String>} $component-state-list (false) - A list of component state ('component-name:component-size')
///
/// @access public
/// @group api

@mixin Herow-component-column-width(
    $column-span: 1,
    $component-name: $Herow-default-component-name,
    $component-state-list: false
) {
    $component-state-list: Herow-get-formatted-component-state-list($component-state-list, $component-name);
    @for $i from 1 through length($component-state-list) {
        $component-state: nth($component-state-list, $i);
        $column-count: Herow-get-column-count-by-component-state($component-state);
        @include Herow-on($component-state) {
            @include Herow-column-width(
                $column-span,
                $column-count
            );
        }
    }
}

/// Change the flow of the component column
///
/// @param {'inline' | 'left' | 'right'} $column-flow ('inline') - The flow of the column
/// @param {String} $component-name (layout) - The name of the component
/// @param {List<String>} $component-state-list (false) - A list of component state ('component-name:component-size')
///
/// @access public
/// @group atomic-api

@mixin Herow-component-column-flow(
    $column-flow: $Herow-default-column-flow,
    $component-name: $Herow-default-component-name,
    $component-state-list: false
) {
    $component-state-list: Herow-get-formatted-component-state-list($component-state-list, $component-name);
    @include Herow-on($component-state-list) {
        @include Herow-column-flow($column-flow);
    }
}

/// Change the left offset of the component column
///
/// @param {Integer} $column-offset (1) - The span length for the left offset of the column
/// @param {String} $component-name (layout) - The name of the component
/// @param {List<String>} $component-state-list (false) - A list of component state ('component-name:component-size')
///
/// @access public
/// @group atomic-api

@mixin Herow-component-column-offset(
    $column-offset: 1,
    $component-name: $Herow-default-component-name,
    $component-state-list: false
) {
    $component-state-list: Herow-get-formatted-component-state-list($component-state-list, $component-name);
    @for $i from 1 through length($component-state-list) {
        $component-state: nth($component-state-list, $i);
        $column-count: Herow-get-column-count-by-component-state($component-state);
        @include Herow-on($component-state) {
            @include Herow-column-offset(
                $column-offset,
                $column-count
            );
        }
    }
}

/// Include the styles of a component column
///
/// @param {Integer} $column-span (1) - The span length of the column
/// @param {String} $component-name (layout) - The name of the component
/// @param {Map} $component-state-list (false) - A list of component state ('component-name:component-size')
///
/// @access public
/// @group api

@mixin Herow-component-column(
    $column-span: 1,
    $component-name: $Herow-default-component-name,
    $component-state-list: false
) {
    $component: Herow-get-component-by-component-name($component-name);
    $column-count: Herow-get-column-count-by-component-state($component-name);
    @include Herow-column(
        $column-span,
        $column-count,
        map-get($component, gutter-width)
    );
    @if ($component-state-list) {
        @include Herow-component-column-width($column-span, $component-name, $component-state-list);
    }
}
